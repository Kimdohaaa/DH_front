// 객체 선언
let 객체변수1 = {};
// 객체 호출
console.log(객체변수1);

// 객체 속성 구성
let 객체변수2 = {속성1 : 10, 속성2 :'hello'};
console.log(객체변수2); // 객체 호출 시 객체의 속성 출력
// 객체의 특정 속성 출력
console.log(객체변수2.속성1);
console.log(객체변수2.속성2);

// 객체 내 속성 생성
객체변수2.속성3 = true;
console.log(객체변수2);

// 객체 내 속성 수정
객체변수2.속성1 = 20;
console.log(객체변수2.속성1);

// 객체 내 속성 삭제
delete 객체변수2.속성3;
console.log(객체변수2);

// 객체 내 다양한 속성값들
let 객체변수3 = {
    속성1 : 10,                 // 리터럴
    속성2 : 'Hello1',           // 문자
    속성3 : false,              // 불리언
    속성4 : [10, ,20, 30, 40],  // 배열
    속성5 : function(){},       // 함수
    속성6 : {속성7: 10, 속성8 : 'Hello2'}   // 객체
};

// 리터럴
console.log(객체변수3);
// 문자
console.log(객체변수3.속성1);
// 불리언
console.log(객체변수3.속성2);
// 배열
console.log(객체변수3.속성3);
console.log(객체변수3.속성4);
    // 배열 내 배열 원소 참조시는 .(온점)이 아닌 [](대괄호)사용
    console.log(객체변수3.속성4[0]);
    console.log(객체변수3.속성4[1]);
// 함수
console.log(객체변수3.속성5());
// 객체
console.log(객체변수3.속성6);
    // 참조 안에 참조
    console.log(객체변수3.속성6.속성7);
    console.log(객체변수3.속성6.속성8);

